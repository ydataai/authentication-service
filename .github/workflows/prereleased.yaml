name: Prereleased



on:
  release:
    types:
    - prereleased



env:
  COMPONENT: authentication-service
  COMPONENT_PATH: contrib

  PRIVATE_ECR_ACCESSKEYID: ${{ secrets.AWS_ECR_ACCESSKEYID }}
  PRIVATE_ECR_SECRETACCESSKEY: ${{ secrets.AWS_ECR_SECRETACCESSKEY }}
  PRIVATE_ECR_REGION: ${{ secrets.AWS_ECR_REGION }}

  CONTAINER: authentication-service-container-image
  DOCKER_REPOSITORY: authentication-service



jobs:
  cancel_previous:
    name: 'Cancel Previous Runs'
    runs-on: ubuntu-20.04
    timeout-minutes: 3

    steps:
      - uses: ydataai/cancel-workflow-action@0.7.0
        with:
          ignore_sha: true
          access_token: ${{ secrets.ACCESS_TOKEN }}


  prepare:
    name: Prepare
    runs-on: ubuntu-20.04

    needs:
    - cancel_previous

    outputs:
      version: ${{ steps.version.outputs.value }}

    steps:
    - name: Version
      id: version
      run: echo ::set-output name=value::${GITHUB_REF#refs/*/}


  build:
    name: Build
    runs-on: ubuntu-20.04

    needs:
    - prepare

    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.PRIVATE_ECR_ACCESSKEYID }}
        aws-secret-access-key: ${{ env.PRIVATE_ECR_SECRETACCESSKEY }}
        aws-region: ${{ env.PRIVATE_ECR_REGION }}

    - name: Login to Amazon ECR
      id: ecr_password
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push
      uses: docker/build-push-action@v2
      env:
        DOCKER_IMAGE_TAG: ${{ steps.ecr_password.outputs.registry }}/${{ env.DOCKER_REPOSITORY }}:${{ needs.prepare.outputs.version }}
      with:
        context: .
        push: true
        tags: ${{ env.DOCKER_IMAGE_TAG }}


  update-manifests:
    name: Update Manifests
    runs-on: ubuntu-20.04

    needs:
    - prepare
    - build

    steps:
    - name: Checkout Manifests repo
      uses: actions/checkout@v2
      with:
        repository: ydataai/manifests
        token: ${{ secrets.ACCESS_TOKEN }}

    - uses: imranismail/setup-kustomize@v1
      with:
        kustomize-version: "3.8.5"

    - name: Update kustomization image tag
      env:
        VERSION: ${{ needs.prepare.outputs.version }}
      run: |
        cd ${COMPONENT_PATH}/
        kustomize edit set image ${CONTAINER}=${DOCKER_REPOSITORY}:${VERSION}

    - name: Commit and push image update into manifests repo
      env:
        VERSION: ${{ needs.prepare.outputs.version }}
      run: |
        git config user.email "azory@ydata.ai"
        git config user.name "Azory YData Bot"
        git commit -a -m "chore(bump): [CI] [DEV] bump ${{ env.COMPONENT }} to $VERSION"
        git push origin master
