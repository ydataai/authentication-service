name: Released

# FIX: remove the following line and uncomment the others to continue
on: {}
# on:
#   release:
#     types:
#     - released


env:
  COMPONENT: laboratory-controller
  COMPONENT_PATH: apps/laboratory-controller

  API_CONTAINER: api_container_image
  API_DOCKER_IMAGE_URL: ${{ secrets.PRIVATE_CONTAINER_REGISTRY }}/${{ github.repository_owner }}/laboratory-controller/api

  MANAGER_CONTAINER: manager_container_image
  MANAGER_DOCKER_IMAGE_URL: ${{ secrets.PRIVATE_CONTAINER_REGISTRY }}/${{ github.repository_owner }}/laboratory-controller/manager


jobs:
  prepare:
    name: Extract Version and Build number
    runs-on: ubuntu-20.04

    outputs:
      build_number: ${{ steps.short_sha.outputs.value }}
      version: ${{ steps.version.outputs.value }}

    steps:
    - name: Version
      id: version
      run: echo ::set-output name=value::${GITHUB_REF#refs/*/}

    - uses: actions/checkout@v2

    - name: Git Short sha
      id: short_sha
      run: echo "::set-output name=value::$(git rev-parse --short HEAD)"


  docker-tag-api:
    name: Docker Tag and Push API
    runs-on: ubuntu-20.04

    needs:
    - prepare

    steps:
    - uses: docker/login-action@v1
      with:
        registry: ${{ secrets.PRIVATE_CONTAINER_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Docker tag and push
      env:
        SOURCE: ${{ env.API_DOCKER_IMAGE_URL }}:${{ needs.prepare.outputs.version }}.${{ needs.prepare.outputs.build_number }}
        DESTINATION: ${{ env.API_DOCKER_IMAGE_URL }}:${{ needs.prepare.outputs.version }}
      run: |
        docker pull $SOURCE
        docker tag $SOURCE $DESTINATION
        docker push $DESTINATION


  docker-tag-manager:
    name: Docker Tag and Push Manager
    runs-on: ubuntu-20.04

    needs:
    - prepare

    steps:
    - uses: docker/login-action@v1
      with:
        registry: ${{ secrets.PRIVATE_CONTAINER_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Docker tag and push
      env:
        SOURCE: ${{ env.MANAGER_DOCKER_IMAGE_URL }}:${{ needs.prepare.outputs.version }}.${{ needs.prepare.outputs.build_number }}
        DESTINATION: ${{ env.MANAGER_DOCKER_IMAGE_URL }}:${{ needs.prepare.outputs.version }}
      run: |
        docker pull $SOURCE
        docker tag $SOURCE $DESTINATION
        docker push $DESTINATION


  update-manifests:
    name: Update Manifests
    runs-on: ubuntu-20.04

    needs:
    - prepare
    - docker-tag-api
    - docker-tag-manager

    steps:
    - name: Checkout Manifests repo
      uses: actions/checkout@v2
      with:
        repository: ydataai/manifests
        token: ${{ secrets.ACCESS_TOKEN }}

    - uses: imranismail/setup-kustomize@v1
      with:
        kustomize-version: "3.8.5"

    - name: Update kustomization image tag
      env:
        VERSION: ${{ needs.prepare.outputs.version }}
      run: |
        cd ${COMPONENT_PATH}
        kustomize edit set image ${API_CONTAINER}=${API_DOCKER_IMAGE_URL}:${VERSION}
        kustomize edit set image ${MANAGER_CONTAINER}=${MANAGER_DOCKER_IMAGE_URL}:${VERSION}

    - name: Commit and push image update into manifests repo
      env:
        VERSION: ${{ needs.prepare.outputs.version }}
      run: |
        git config user.email "azory@ydata.ai"
        git config user.name "Azory YData Bot"
        git commit -a -m "chore(bump): [CI] [PROD] bump ${{ env.COMPONENT }} to $VERSION"
        git push origin master
